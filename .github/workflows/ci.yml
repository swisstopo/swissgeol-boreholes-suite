name: CI

on:
  push:
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    name: Build and run tests

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build solution
        run: dotnet build BDMS.sln -c Release /warnaserror

      - name: Start db and api's
        run: docker compose up --wait minio db api-legacy api dataextraction

      - name: Run dotnet tests
        run: dotnet test BDMS.sln -c Release --no-build --verbosity normal --filter TestCategory!=LongRunning

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - working-directory: ./src/client
        run: npm ci

      - working-directory: ./src/client
        run: npm run lint

  cypress-tests:
    runs-on: ubuntu-latest
    name: Run cypress tests
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4, 5]

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build solution
        run: dotnet build BDMS.sln -c Release /warnaserror

      - name: Start db and api's
        run: docker compose up --wait minio db api-legacy api oidc-server dataextraction

      - working-directory: ./src/client
        run: npm ci

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          command: npx cypress run --record --parallel --key ${{ secrets.CYPRESS_RECORD_KEY }} --ci-build-id ${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt}}
          build: npm run build
          start: npm start
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          working-directory: ./src/client
        env:
          VITE_APP_VERSION: 0.0.99+dev
          TZ: Europe/Zurich
          # Pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  view-sync:
    runs-on: ubuntu-latest
    name: Run view-sync

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        working-directory: src/view-sync
        run: docker compose -f docker-compose.services.yml up --build --wait

      - name: Run view-sync
        working-directory: src/view-sync
        run: docker compose -f docker-compose.yml up --build --exit-code-from view-sync

  extern-sync:
    runs-on: ubuntu-latest
    name: Run extern-sync

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        working-directory: src/extern-sync
        run: docker compose -f docker-compose.services.yml up --build --wait

      - name: Run extern-sync
        working-directory: src/extern-sync
        run: docker compose -f docker-compose.yml up --build --exit-code-from extern-sync
